; Listing generated by Microsoft (R) Optimizing Compiler Version 19.24.28319.0 

include listing.inc

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	__local_stdio_printf_options
PUBLIC	_vfprintf_l
PUBLIC	printf
PUBLIC	hanoi
PUBLIC	main
EXTRN	__acrt_iob_func:PROC
EXTRN	__stdio_common_vfprintf:PROC
_DATA	SEGMENT
COMM	?_OptionsStorage@?1??__local_stdio_printf_options@@9@9:QWORD							; `__local_stdio_printf_options'::`2'::_OptionsStorage
_DATA	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$_vfprintf_l DD imagerel $LN3
	DD	imagerel $LN3+67
	DD	imagerel $unwind$_vfprintf_l
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$printf DD imagerel $LN3
	DD	imagerel $LN3+87
	DD	imagerel $unwind$printf
pdata	ENDS
pdata	SEGMENT
$pdata$hanoi DD	imagerel $LN5
	DD	imagerel $LN5+155
	DD	imagerel $unwind$hanoi
$pdata$main DD	imagerel $LN3
	DD	imagerel $LN3+29
	DD	imagerel $unwind$main
pdata	ENDS
_DATA	SEGMENT
$SG8903	DB	'Move disk 1 from %c to %c', 0aH, 00H
	ORG $+5
$SG8904	DB	'Move disk %d from %c to %c', 0aH, 00H
_DATA	ENDS
xdata	SEGMENT
$unwind$hanoi DD 011601H
	DD	04216H
$unwind$main DD	010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$printf DD 011801H
	DD	06218H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_vfprintf_l DD 011801H
	DD	06218H
xdata	ENDS
; Function compile flags: /Odtp
; File C:\Work\lab1\hanoi.c
_TEXT	SEGMENT
main	PROC

; 14   : {

$LN3:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 15   :     hanoi(3, 'A', 'C', 'B');

  00004	41 b1 42	 mov	 r9b, 66			; 00000042H
  00007	41 b0 43	 mov	 r8b, 67			; 00000043H
  0000a	b2 41		 mov	 dl, 65			; 00000041H
  0000c	b9 03 00 00 00	 mov	 ecx, 3
  00011	e8 00 00 00 00	 call	 hanoi

; 16   : }

  00016	33 c0		 xor	 eax, eax
  00018	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0001c	c3		 ret	 0
main	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\Work\lab1\hanoi.c
_TEXT	SEGMENT
n$ = 48
from$ = 56
to$ = 64
aux$ = 72
hanoi	PROC

; 3    : {

$LN5:
  00000	44 88 4c 24 20	 mov	 BYTE PTR [rsp+32], r9b
  00005	44 88 44 24 18	 mov	 BYTE PTR [rsp+24], r8b
  0000a	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  0000e	89 4c 24 08	 mov	 DWORD PTR [rsp+8], ecx
  00012	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 4    :     if (n == 1)

  00016	83 7c 24 30 01	 cmp	 DWORD PTR n$[rsp], 1
  0001b	75 1d		 jne	 SHORT $LN2@hanoi

; 5    :         printf("Move disk 1 from %c to %c\n", from, to);

  0001d	0f be 44 24 40	 movsx	 eax, BYTE PTR to$[rsp]
  00022	0f be 4c 24 38	 movsx	 ecx, BYTE PTR from$[rsp]
  00027	44 8b c0	 mov	 r8d, eax
  0002a	8b d1		 mov	 edx, ecx
  0002c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG8903
  00033	e8 00 00 00 00	 call	 printf
  00038	eb 5c		 jmp	 SHORT $LN3@hanoi
$LN2@hanoi:

; 6    :     else
; 7    :     {
; 8    :         hanoi(n - 1, from, aux, to);

  0003a	8b 44 24 30	 mov	 eax, DWORD PTR n$[rsp]
  0003e	ff c8		 dec	 eax
  00040	44 0f b6 4c 24
	40		 movzx	 r9d, BYTE PTR to$[rsp]
  00046	44 0f b6 44 24
	48		 movzx	 r8d, BYTE PTR aux$[rsp]
  0004c	0f b6 54 24 38	 movzx	 edx, BYTE PTR from$[rsp]
  00051	8b c8		 mov	 ecx, eax
  00053	e8 00 00 00 00	 call	 hanoi

; 9    :         printf("Move disk %d from %c to %c\n", n, from, to);

  00058	0f be 44 24 40	 movsx	 eax, BYTE PTR to$[rsp]
  0005d	0f be 4c 24 38	 movsx	 ecx, BYTE PTR from$[rsp]
  00062	44 8b c8	 mov	 r9d, eax
  00065	44 8b c1	 mov	 r8d, ecx
  00068	8b 54 24 30	 mov	 edx, DWORD PTR n$[rsp]
  0006c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG8904
  00073	e8 00 00 00 00	 call	 printf

; 10   :         hanoi(n - 1, aux, to, from);

  00078	8b 44 24 30	 mov	 eax, DWORD PTR n$[rsp]
  0007c	ff c8		 dec	 eax
  0007e	44 0f b6 4c 24
	38		 movzx	 r9d, BYTE PTR from$[rsp]
  00084	44 0f b6 44 24
	40		 movzx	 r8d, BYTE PTR to$[rsp]
  0008a	0f b6 54 24 48	 movzx	 edx, BYTE PTR aux$[rsp]
  0008f	8b c8		 mov	 ecx, eax
  00091	e8 00 00 00 00	 call	 hanoi
$LN3@hanoi:

; 11   :     }
; 12   : }

  00096	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0009a	c3		 ret	 0
hanoi	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.18362.0\ucrt\stdio.h
;	COMDAT printf
_TEXT	SEGMENT
_Result$ = 32
_ArgList$ = 40
_Format$ = 64
printf	PROC						; COMDAT

; 954  :     {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000f	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00014	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 955  :         int _Result;
; 956  :         va_list _ArgList;
; 957  :         __crt_va_start(_ArgList, _Format);

  00018	48 8d 44 24 48	 lea	 rax, QWORD PTR _Format$[rsp+8]
  0001d	48 89 44 24 28	 mov	 QWORD PTR _ArgList$[rsp], rax

; 958  :         _Result = _vfprintf_l(stdout, _Format, NULL, _ArgList);

  00022	b9 01 00 00 00	 mov	 ecx, 1
  00027	e8 00 00 00 00	 call	 __acrt_iob_func
  0002c	4c 8b 4c 24 28	 mov	 r9, QWORD PTR _ArgList$[rsp]
  00031	45 33 c0	 xor	 r8d, r8d
  00034	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Format$[rsp]
  00039	48 8b c8	 mov	 rcx, rax
  0003c	e8 00 00 00 00	 call	 _vfprintf_l
  00041	89 44 24 20	 mov	 DWORD PTR _Result$[rsp], eax

; 959  :         __crt_va_end(_ArgList);

  00045	48 c7 44 24 28
	00 00 00 00	 mov	 QWORD PTR _ArgList$[rsp], 0

; 960  :         return _Result;

  0004e	8b 44 24 20	 mov	 eax, DWORD PTR _Result$[rsp]

; 961  :     }

  00052	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00056	c3		 ret	 0
printf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.18362.0\ucrt\stdio.h
;	COMDAT _vfprintf_l
_TEXT	SEGMENT
_Stream$ = 64
_Format$ = 72
_Locale$ = 80
_ArgList$ = 88
_vfprintf_l PROC					; COMDAT

; 642  :     {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 643  :         return __stdio_common_vfprintf(_CRT_INTERNAL_LOCAL_PRINTF_OPTIONS, _Stream, _Format, _Locale, _ArgList);

  00018	e8 00 00 00 00	 call	 __local_stdio_printf_options
  0001d	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _ArgList$[rsp]
  00022	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  00027	4c 8b 4c 24 50	 mov	 r9, QWORD PTR _Locale$[rsp]
  0002c	4c 8b 44 24 48	 mov	 r8, QWORD PTR _Format$[rsp]
  00031	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Stream$[rsp]
  00036	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00039	e8 00 00 00 00	 call	 __stdio_common_vfprintf

; 644  :     }

  0003e	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00042	c3		 ret	 0
_vfprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.18362.0\ucrt\corecrt_stdio_config.h
;	COMDAT __local_stdio_printf_options
_TEXT	SEGMENT
__local_stdio_printf_options PROC			; COMDAT

; 87   :         static unsigned __int64 _OptionsStorage;
; 88   :         return &_OptionsStorage;

  00000	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?_OptionsStorage@?1??__local_stdio_printf_options@@9@9 ; `__local_stdio_printf_options'::`2'::_OptionsStorage

; 89   :     }

  00007	c3		 ret	 0
__local_stdio_printf_options ENDP
_TEXT	ENDS
END

